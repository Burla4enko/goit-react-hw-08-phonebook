{"version":3,"file":"static/js/109.ff9bbb65.chunk.js","mappings":"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","sources":["redux/contacts-and-filtering/selectors.js","components/ContactForm/ContactForm.styled.js","utils/validationSchema.js","components/ContactForm/ContactForm.js","utils/isInContact.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts/Contacts.js"],"sourcesContent":["export const selectFilter = state => state.filter;\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const ContactFormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 8px;\n  padding: 8px;\n  margin: 10px;\n  width: 400px;\n\n  border: 1px solid black;\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n  position: relative;\n  margin: 10px 0;\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  margin-top: 5px;\n  padding: 4px;\n  border-radius: 4px;\n  border: 1px solid gray;\n`;\n\nexport const MessageSpan = styled(ErrorMessage)`\n  position: absolute;\n  top: 0;\n  left: 400px;\n  width: 400px;\n  padding: 8px;\n\n  background-color: lightgray;\n  border-radius: 8px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  min-width: 100px;\n  padding: 8px 16px;\n\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  transition: color 0.2s ease, background-color 0.2s ease;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n\n  :hover,\n  :focus {\n    background-color: darkgray;\n    color: white;\n  }\n`;\n","import * as yup from 'yup';\n\nconst NUMBER_PTTRN =\n  /\\+?\\d{1,4}?[-\\d\\s]?\\(?\\d{1,3}?\\)?[-\\d\\s]?\\d{1,4}[-\\d\\s]?\\d{1,4}[-\\d\\s]?\\d{1,9}/;\nconst errorMsgNumb =\n  'Phone number must be at least 5 digits and can contain spaces, dashes, parentheses and can start with +';\nconst NAME_PTTRN = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst errorMsgName = `Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan`;\nexport const validationScheme = yup.object().shape({\n  name: yup.string().min(3).matches(NAME_PTTRN, errorMsgName).required(),\n  number: yup.string().matches(NUMBER_PTTRN, errorMsgNumb).required(),\n});\n","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { addContact } from 'redux/contacts-and-filtering/operations';\nimport {\n  selectContacts,\n  selectIsLoading,\n} from 'redux/contacts-and-filtering/selectors';\nimport {\n  ContactFormStyled,\n  Input,\n  MessageSpan,\n  Button,\n  Label,\n} from './ContactForm.styled';\nimport { validationScheme } from 'utils/validationSchema';\nimport { isInContact } from 'utils/isInContact';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const initialValues = { name: '', number: '' };\n\n  const onSubmit = ({ name, number }, { resetForm }) => {\n    if (isInContact(contacts, name).length > 0) {\n      return toast.error(`${name} is already in the contact list`);\n    }\n    try {\n      dispatch(addContact({ name, number }));\n      toast.success(`New contact ${name} successfully added`);\n      resetForm();\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validationSchema={validationScheme}\n    >\n      <ContactFormStyled autoComplete=\"off\">\n        <Label htmlFor=\"name\">\n          Name\n          <Input type=\"text\" name=\"name\" />\n          <MessageSpan name=\"name\" component={'span'} />\n        </Label>\n\n        <Label htmlFor=\"number\">\n          Number\n          <Input type=\"tel\" name=\"number\" />\n          <MessageSpan name=\"number\" component={'span'} />\n        </Label>\n\n        <Button type=\"submit\" disabled={isLoading}>\n          Add contact\n        </Button>\n      </ContactFormStyled>\n    </Formik>\n  );\n};\n","export const isInContact = (contacts, newName) => {\n  return contacts.filter(\n    ({ name }) => name.toLowerCase() === newName.toLowerCase().trim()\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactListUl = styled.ul`\n  margin-left: 20px;\n  padding-left: 10px;\n`;\n\nexport const ContactListLi = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 20px;\n\n  font-weight: 500;\n\n  span {\n    text-transform: capitalize;\n  }\n\n  button {\n    margin-left: 10px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'components/ContactForm/ContactForm.styled';\nimport { ContactListLi, ContactListUl } from './ContactList.styled';\nimport {\n  selectContacts,\n  selectFilter,\n  selectIsLoading,\n} from 'redux/contacts-and-filtering/selectors';\nimport {\n  deleteContact,\n  fetchContacts,\n} from 'redux/contacts-and-filtering/operations';\n// import { toast } from 'react-hot-toast';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const filter = useSelector(selectFilter);\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n  );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactListUl>\n      {visibleContacts.map(({ id, name, number }) => {\n        return (\n          <ContactListLi key={id}>\n            <span>{name}:</span>\n            <span>{number}</span>\n            <Button\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n              disabled={isLoading}\n            >\n              Delete\n            </Button>\n          </ContactListLi>\n        );\n      })}\n    </ContactListUl>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  font-weight: 500;\n  position: relative;\n  margin: 10px;\n`;\n\nexport const FilterInput = styled.input`\n  display: block;\n  margin-top: 5px;\n  margin-left: 10px;\n  padding: 4px;\n  border-radius: 4px;\n  border: 1px solid gray;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/contacts-and-filtering/filterSlice';\nimport {\n  selectContacts,\n  selectFilter,\n} from 'redux/contacts-and-filtering/selectors';\nimport { FilterInput, FilterLabel } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <FilterLabel>\n          Find contacts by name\n          <FilterInput\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={e => dispatch(changeFilter(e.target.value))}\n          />\n        </FilterLabel>\n      )}\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\n\nexport default function Contacts() {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  return (\n    isLoggedIn && (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </>\n    )\n  );\n}\n"],"names":["selectFilter","state","filter","selectContacts","contacts","items","selectIsLoading","isLoading","ContactFormStyled","styled","Form","Label","Input","Field","MessageSpan","ErrorMessage","Button","validationScheme","yup","shape","name","min","matches","required","number","ContactForm","useSelector","dispatch","useDispatch","initialValues","onSubmit","resetForm","newName","toLowerCase","trim","isInContact","length","toast","addContact","e","message","validationSchema","autoComplete","htmlFor","type","component","disabled","ContactListUl","ContactListLi","ContactList","visibleContacts","contact","includes","useEffect","fetchContacts","map","id","onClick","deleteContact","FilterLabel","FilterInput","Filter","value","onChange","changeFilter","target","Contacts","selectIsLoggedIn"],"sourceRoot":""}